<?xml version="1.0" encoding="UTF-8"?>

<!-- - Sample namespace-based configuration - -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">
<http pattern="/resource/getImage" create-session="never">
		<anonymous enabled="false" />
		<intercept-url pattern="/resource/getImage" access="ROLE_USER" />
		<custom-filter ref="picResourceServer" before="PRE_AUTH_FILTER" />
</http>

<oauth2:resource-server id="picResourceServer"
		resource-id="pic-resource" token-services-ref="tokenServices" />
<beans:bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="supportRefreshToken" value="true" />
		<beans:property name="clientDetailsService" ref="clientDetailsService" />
</beans:bean>
<beans:bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore">
	</beans:bean>
<oauth2:client-details-service id="clientDetailsService">
		<oauth2:client client-id="m1"
			authorized-grant-types="password,authorization_code,refresh_token,implicit"
			secret="s1" scope="read,write,trust" authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT"
			resource-ids="pic-resource" />
</oauth2:client-details-service>

<oauth2:authorization-server
		client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
		user-approval-page="oauth_approval" error-page="oauth_error">
		<oauth2:authorization-code />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
</oauth2:authorization-server>

		
<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service>
				<user name="yjmyzz" password="123456" authorities="ROLE_USER" />
				<user name="litaojun" password="123456" authorities="ROLE_TEST" />
			</user-service>
		</authentication-provider>
		<!-- 加入开发人员自定义的Provider
		<authentication-provider ref="customProvider" /> -->
</authentication-manager>
</beans:beans>